Ethereum Crawler (EthCrawler)

Overview
EthCrawler is a Spring Boot application designed to interact with the Ethereum blockchain. It fetches historical balances and transactions for a given Ethereum address using the Etherscan and OpenSea APIs, stores data in a MySQL database, and provides a simple React-based frontend for testing. The application runs in a Dockerized environment with two services: app (Spring Boot backend) and db (MySQL database).

Prerequisites

Docker: Ensure Docker and Docker Compose are installed (Docker Desktop for Windows/Mac or Docker Engine for Linux).
Java 21: Required for building the Spring Boot application (handled by Docker).
Git: To clone the repository.
Internet Access: Needed to pull Docker images and make API calls to Etherscan and OpenSea.

Setup Instructions

Clone the Repository:
Clone this private repository to your local machine: git clone <repository-url> cd ethcrawler</repository-url>
Replace <repository-url> with the provided GitHub URL.</repository-url>

Verify Files:

Ensure the following key files are present:
docker-compose.yml: Defines the app and db services.
Dockerfile: Builds the Spring Boot application image.
pom.xml: Maven dependencies for the backend.
src/main/resources/application.properties: Configuration for database, APIs, and caching.
src/main/resources/static/index.html: React-based frontend for testing.

Environment Variables:

The docker-compose.yml includes environment variables for API keys and database credentials:
ETHERSCAN_API_KEY: Pre-set to IY6AIIRJPF7XX1B8NK9ZNS48JND3UUQF51. (Should be env variable but for simplicity i leaved them like this)
OPENSEA_API_KEY: Pre-set to 279cf63c382a4c589a5b2e7101362f41.     (Should be env variable but for simplicity i leaved them like this)
MYSQL_ROOT_PASSWORD: Set to 123 for simplicity.
No changes are needed unless you want to use your own API keys.

Running the Application

Start the Containers:
Use Docker Compose to build and run the application: docker-compose up --build
The --build flag ensures the app image is rebuilt if changes are detected.
This starts two containers:
app: Spring Boot backend on port 8001.
db: MySQL database with persistent storage via the db-data volume.
Monitor Logs:
Check the logs to confirm the application starts successfully: docker-compose logs -f
Look for:
db-1: "ready for connections".
app-1: "Started EthCrawlerApplication in X.XXX seconds".
Access the Frontend:
Open your browser and navigate to http://localhost:8001/.
Youâ€™ll see a React-based interface with forms to fetch transactions and balances.